# .github/workflows/release.yml
name: Build Extension

on:
  push:
    tags:
      - 'v*.*.*'      # Versioni stabili (es. v1.5.0)
      - 'v*.*.*-*'    # Versioni pre-release (es. v1.5.0-beta.1)

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [windows, macos-arm, macos-intel, linux]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Create wheels directory
        run: mkdir -p wheels
      
      - name: Download wheels for all platforms
        run: |
          # Leggi requirements
          while IFS= read -r package || [ -n "$package" ]; do
            # Salta righe vuote e commenti
            [[ -z "$package" || "$package" =~ ^[[:space:]]*# ]] && continue
            
            # Leggi piattaforme
            while IFS= read -r platform || [ -n "$platform" ]; do
              [[ -z "$platform" || "$platform" =~ ^[[:space:]]*# ]] && continue
              echo "Downloading $package for $platform..."
              pip download "$package" --only-binary=:all: --platform="$platform" --python-version=3.11 -d wheels/
            done < scripts/platforms.txt
          done < scripts/requirements_wheels.txt
      
      - name: Generate platform-specific manifest
        run: |
          python scripts/generate_manifest.py prod ${{ matrix.platform }}
      
      - name: Create extension package
        run: |
          # Crea pacchetto specifico per piattaforma
          platform_name="${{ matrix.platform }}"
          case $platform_name in
            "macos-arm") platform_suffix="macosx_arm64" ;;
            "macos-intel") platform_suffix="macosx_x64" ;;
            "windows") platform_suffix="windows_x64" ;;
            "linux") platform_suffix="linux_x64" ;;
          esac
          
          zip -r "em_tools-${{ github.ref_name }}-${platform_suffix}.zip" \
            . -x ".git/*" ".github/*" "*.pyc" "__pycache__/*" "scripts/*" ".gitignore"
          
          # Rinomina in .blext
          mv "em_tools-${{ github.ref_name }}-${platform_suffix}.zip" \
             "em_tools-${{ github.ref_name }}-${platform_suffix}.blext"
      
      - name: Check if prerelease
        id: prerelease
        run: |
          if [[ "${{ github.ref_name }}" =~ -(alpha|beta|rc|dev) ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: em_tools-${{ github.ref_name }}-*.blext
          prerelease: ${{ steps.prerelease.outputs.is_prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}